{"version":3,"file":"static/js/170.3387d9f7.chunk.js","mappings":"yRAGaA,EAAWC,EAAAA,EAAAA,GAAH,0HACjBC,EAAAA,GAAAA,GAAAA,GAIOA,EAAAA,GAAAA,OAAa,IAGXC,EAAcF,EAAAA,EAAAA,IAAH,wWASXG,EAAQH,EAAAA,EAAAA,IAAH,2EAGdC,EAAAA,GAAAA,GAAAA,IAISG,EAAYJ,EAAAA,EAAAA,GAAH,0NAIAC,EAAAA,GAAAA,OAAAA,MAKlBA,EAAAA,GAAAA,GAAAA,G,4LChCSI,EAAmBL,EAAAA,EAAAA,IAAH,+EACzBC,EAAAA,GAAAA,GAAAA,GAEcA,EAAAA,GAAAA,OAAa,IAGlBK,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,oRAOVC,EAAAA,GAAAA,OAAa,GAEJA,EAAAA,GAAAA,OAAAA,YACXA,EAAAA,GAAAA,OAAAA,MAGaA,EAAAA,GAAAA,OAAAA,OAGXO,EAAiBR,EAAAA,EAAAA,GAAH,6DAEXC,EAAAA,GAAAA,OAAa,IAEhBQ,GAAYT,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,oVAGHC,EAAAA,GAAAA,OAAa,GAMnBA,EAAAA,GAAAA,OAAa,GAEJA,EAAAA,GAAAA,OAAAA,YACXA,EAAAA,GAAAA,OAAAA,MAGaA,EAAAA,GAAAA,OAAAA,O,uCCkCxB,EAlEqB,WAAO,IAAD,IACzB,GAAwBS,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBC,MAgB/C,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,0HAE2BC,EAAAA,EAAAA,IAAcT,GAFzC,OAEUU,EAFV,SAIMA,EAASC,KADHC,EAHZ,EAGYA,YAAaC,EAHzB,EAGyBA,MAAOC,EAHhC,EAGgCA,aAAcC,EAH9C,EAG8CA,SAAUC,EAHxD,EAGwDA,OAEpDjB,EAAQ,CAAEa,YAAAA,EAAaC,MAAAA,EAAOC,aAAAA,EAAcC,SAAAA,EAAUC,OAAAA,IAL1D,gDAOIC,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACnB,KAGF,iCACE,UAACJ,EAAD,CAAWwB,GAAE,UAAEhB,EAAgBiB,eAAlB,QAA6B,UAA1C,UAAqD,WAEnD,SAAC,MAAD,QAEF,UAAC7B,EAAD,WACGM,EAAKc,aACJ,gBACEU,IAAG,6DAAwDxB,EAAKc,aAChEW,IAAKzB,EAAKe,MACVW,MAAM,SAGR,SAAC,KAAD,KAEF,4BACE,wBAAK1B,EAAKe,SACV,6CAAmBY,KAAKC,MAA0B,GAApB5B,EAAKgB,cAAnC,QACA,wBAAI,cACJ,uBAAIhB,EAAKiB,YACT,wBAAI,YACJ,wBACGjB,EAAKkB,QACJlB,EAAKkB,OAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,aAIxB,4BACE,wBAAI,qBACJ,UAACjC,EAAD,YACE,yBACE,SAACF,EAAD,CAAY2B,GAAG,OAAf,SAAsB,YAExB,yBACE,SAAC3B,EAAD,CAAY2B,GAAG,UAAf,SAAyB,kBAG7B,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C","sources":["components/Cast/Cast.styled.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\nexport const CastList = styled.ul`\n  ${theme.mq[0]} {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: center;\n    gap: ${theme.sizing(2)};\n  }\n`;\nexport const Placeholder = styled.div`\n  background-image: url(https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg);\n  width: 100%;\n  height: 100%;\n  background-color: black;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n`;\nexport const Thumb = styled.div`\n  width: 100%;\n\n  ${theme.mq[0]} {\n    height: 270px;\n  }\n`;\nexport const ActorCard = styled.li`\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: ${theme.colors.white};\n  img {\n    width: 100%;\n  }\n\n  ${theme.mq[0]} {\n    width: 180px;\n    img {\n      max-width: 100%;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { theme } from 'constants';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCardWrapper = styled.div`\n  ${theme.mq[0]} {\n    display: flex;\n    column-gap: ${theme.sizing(4)};\n  }\n`;\nexport const ButtonLink = styled(Link)`\n  display: block;\n  width: 100px;\n  height: 30px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  padding: ${theme.sizing(2)};\n  text-align: center;\n  background-color: ${theme.colors.movieCardBg};\n  color: ${theme.colors.white};\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.black};\n  }\n`;\nexport const BtnLinkWrapper = styled.ul`\n  display: flex;\n  column-gap: ${theme.sizing(2)};\n`;\nexport const GoBackBtn = styled(Link)`\n  display: inline-flex;\n  justify-content: space-between;\n  margin-bottom: ${theme.sizing(3)};\n  width: 100px;\n  height: 30px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  padding: ${theme.sizing(2)};\n  text-align: center;\n  background-color: ${theme.colors.movieCardBg};\n  color: ${theme.colors.white};\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.black};\n  }\n`;\n","import { findMovieById } from 'constants/api';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  MovieCardWrapper,\n  ButtonLink,\n  BtnLinkWrapper,\n  GoBackBtn,\n} from '../MovieDetails/MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { Placeholder } from 'components/Cast/Cast.styled';\nimport { BsArrowReturnLeft } from 'react-icons/bs';\n\nconst MovieDetails = () => {\n  const [info, setInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await findMovieById(movieId);\n        const { poster_path, title, vote_average, overview, genres } =\n          response.data;\n        setInfo({ poster_path, title, vote_average, overview, genres });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <GoBackBtn to={backLocationRef.current ?? '/movies'}>\n        Go back\n        <BsArrowReturnLeft />\n      </GoBackBtn>\n      <MovieCardWrapper>\n        {info.poster_path ? (\n          <img\n            src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${info.poster_path}`}\n            alt={info.title}\n            width=\"360\"\n          />\n        ) : (\n          <Placeholder />\n        )}\n        <div>\n          <h1>{info.title}</h1>\n          <p>{`User score: ${Math.round(info.vote_average * 10)}%`}</p>\n          <h2>Overview</h2>\n          <p>{info.overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {info.genres &&\n              info.genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </ul>\n        </div>\n      </MovieCardWrapper>\n      <div>\n        <h4>Additional info</h4>\n        <BtnLinkWrapper>\n          <li>\n            <ButtonLink to=\"cast\">Cast</ButtonLink>\n          </li>\n          <li>\n            <ButtonLink to=\"reviews\">Reviews</ButtonLink>\n          </li>\n        </BtnLinkWrapper>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["CastList","styled","theme","Placeholder","Thumb","ActorCard","MovieCardWrapper","ButtonLink","Link","BtnLinkWrapper","GoBackBtn","useState","info","setInfo","movieId","useParams","location","useLocation","backLocationRef","useRef","state","from","useEffect","findMovieById","response","data","poster_path","title","vote_average","overview","genres","console","log","fetchData","to","current","src","alt","width","Math","round","map","id","name","Suspense","fallback","Loader"],"sourceRoot":""}