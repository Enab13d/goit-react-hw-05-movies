{"version":3,"file":"static/js/634.7afee3dc.chunk.js","mappings":"mOAGaA,EAAYC,EAAAA,EAAAA,GAAH,mMAEEC,EAAAA,GAAAA,OAAAA,YACXA,EAAAA,GAAAA,OAAAA,OASAC,EAAYF,EAAAA,EAAAA,GAAH,kNAEPC,EAAAA,GAAAA,OAAa,GACRA,EAAAA,GAAAA,OAAa,G,oMCdpBE,EAAYH,EAAAA,EAAAA,OAAH,kZAEbC,EAAAA,GAAAA,OAAa,IACZA,EAAAA,GAAAA,OAAa,KAeVG,EAAcJ,EAAAA,EAAAA,MAAH,sOAIXC,EAAAA,GAAAA,OAAa,GAGVA,EAAAA,GAAAA,OAAa,GACZA,EAAAA,GAAAA,OAAa,IAMjBI,EAAaL,EAAAA,EAAAA,KAAH,4L,SC4BvB,EA1De,WACb,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BP,EAAAA,EAAAA,WAAS,kCAAMM,EAAaE,IAAI,gBAAvB,QAAmC,EAAnC,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,sGAGIJ,EAD6B,KAAVE,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAFnD,UAI2BG,EAAAA,EAAAA,IAAgBH,GAJ3C,OAIUI,EAJV,OAMcC,EACND,EADFE,KAAQD,QAEVZ,EAAUY,GARd,kDAUIE,QAAQC,IAAR,MAVJ,2DAJc,sBACTR,GADS,mCAiBdS,EACD,GAAE,CAACT,EAAOF,IAYX,OACE,4BACE,UAACR,EAAD,CAAYoB,SAZC,SAAAC,GACfA,EAAEC,iBACF,IACUC,EACNF,EAAEG,cADJC,KAAQF,MAEVZ,EAASY,GAETF,EAAEK,OAAOC,OACV,EAIG,WACE,SAAC5B,EAAD,CAAa0B,KAAK,OAAOG,KAAK,OAAOC,aAAa,SAClD,SAAC/B,EAAD,CAAW8B,KAAK,cAEjB1B,EAAO4B,OAAS,IACf,SAAC,IAAD,UACG5B,EAAO6B,KAAI,WAAgBC,GAAhB,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMjC,GAAlC,SACG6B,KAFWD,EADN,QAWrB,C","sources":["components/Home/Home.styled.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { theme } from 'constants';\n\nexport const MovieList = styled.ul`\n  li:nth-of-type(even) {\n    background-color: ${theme.colors.movieCardBg};\n    color: ${theme.colors.white};\n        &:hover,\n    &:focus {\n      background-color: black;\n      cursor: pointer;\n    }\n  }\n`\n\nexport const MovieItem = styled.li`\n\n    padding: ${theme.sizing(1)} 0;\n    padding-left: ${theme.sizing(2)};\n    font-weight: 600;\n\n    &:hover,\n    &:focus {\n      background-color: black;\n      color: white;\n      cursor: pointer;\n    }\n\n`","import styled from \"@emotion/styled\";\nimport { theme } from \"constants\";\n\n\nexport const SearchBtn = styled.button`\ndisplay: inline-block;\nwidth: ${theme.sizing(12)};\nheight: ${theme.sizing(12)};\nborder: 0;\nbackground-image: url('https://cdn3.iconfinder.com/data/icons/feather-5/24/search-1024.png');\nbackground-size: 40%;\nbackground-repeat: no-repeat;\nbackground-position: center;\nopacity: 0.6;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\noutline: none;\n&:hover {\n    opacity: 1;\n}\n`;\n\nexport const SearchInput = styled.input`\ndisplay: inline-block;\nwidth: 100%;\nfont: inherit;\nfont-size: ${theme.sizing(5)};\nborder: none;\noutline: none;\npadding-left: ${theme.sizing(1)};\npadding-right: ${theme.sizing(1)};\n::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`","import { useState, useEffect } from 'react';\nimport { findMovieByName } from 'constants/api';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieList, MovieItem } from '../Home/Home.styled';\nimport { SearchInput, SearchBtn, SearchForm } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(() => searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const nextParams = query !== '' ? { query } : {};\n        setSearchParams(nextParams);\n        const response = await findMovieByName(query);\n        const {\n          data: { results },\n        } = response;\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [query, setSearchParams]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      name: { value },\n    } = e.currentTarget;\n    setQuery(value);\n\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchInput name=\"name\" type=\"text\" autoComplete=\"off\" />\n        <SearchBtn type=\"submit\"></SearchBtn>\n      </SearchForm>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ title, id }, idx) => (\n            <MovieItem key={idx}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n// replace index in map method with id from object in iterable array\n"],"names":["MovieList","styled","theme","MovieItem","SearchBtn","SearchInput","SearchForm","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","get","query","setQuery","useEffect","findMovieByName","response","results","data","console","log","fetchData","onSubmit","e","preventDefault","value","currentTarget","name","target","reset","type","autoComplete","length","map","idx","title","id","to","state","from"],"sourceRoot":""}