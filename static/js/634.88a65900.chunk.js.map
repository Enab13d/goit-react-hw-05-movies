{"version":3,"file":"static/js/634.88a65900.chunk.js","mappings":"mOAGaA,EAAYC,EAAAA,EAAAA,GAAH,+LAEEC,EAAAA,GAAAA,OAAAA,YACXA,EAAAA,GAAAA,OAAAA,OASAC,EAAYF,EAAAA,EAAAA,GAAH,kQACTC,EAAAA,GAAAA,OAAa,GACRA,EAAAA,GAAAA,OAAa,G,oMCdlBE,EAAYH,EAAAA,EAAAA,OAAH,8aAEXC,EAAAA,GAAAA,OAAa,IACZA,EAAAA,GAAAA,OAAa,KAeZG,EAAcJ,EAAAA,EAAAA,MAAH,wPAITC,EAAAA,GAAAA,OAAa,GAGVA,EAAAA,GAAAA,OAAa,GACZA,EAAAA,GAAAA,OAAa,IAMnBI,EAAaL,EAAAA,EAAAA,KAAH,8K,SCqCvB,EAlEe,WAAO,IAAD,EACnB,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BP,EAAAA,EAAAA,WAAS,kCAAMM,EAAaE,IAAI,gBAAvB,QAAmC,EAAnC,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,QAAOH,GACxB,GAAkCT,EAAAA,EAAAA,UAAQ,UAACW,EAASE,eAAV,QAAqB,IAA/D,eAAOC,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,sGAGIT,EAD6B,KAAVE,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAFnD,UAI2BQ,EAAAA,EAAAA,IAAgBR,GAJ3C,OAIUS,EAJV,OAMcC,EACND,EADFE,KAAQD,QAEVjB,EAAUiB,GARd,kDAUIE,QAAQC,IAAR,MAVJ,2DAJc,sBACTb,GADS,mCAiBdc,EACD,GAAE,CAACd,EAAOF,IAaX,OACE,4BACE,UAACR,EAAD,CAAYyB,SAbC,SAAAC,GACfA,EAAEC,iBACF,IACUC,EACNF,EAAEG,cADJC,KAAQF,MAEVjB,EAASiB,GACThB,EAASE,QAAUc,CAGpB,EAIG,WACE,SAAC7B,EAAD,CACE+B,KAAK,OACLC,KAAK,OACLC,aAAa,MACbC,SAAU,SAAAP,GAAC,OAAIV,EAAaU,EAAEQ,OAAON,MAA1B,EACXA,MAAOb,KAET,SAACjB,EAAD,CAAWiC,KAAK,cAEjB7B,EAAOiC,OAAS,IACf,SAAC,IAAD,UACGjC,EAAOkC,KAAI,WAAgBC,GAAhB,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMtC,GAAlC,SACGkC,KAFWD,EADN,QAWrB,C","sources":["components/Home/Home.styled.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\nexport const MovieList = styled.ul`\n  li:nth-of-type(even) {\n    background-color: ${theme.colors.movieCardBg};\n    color: ${theme.colors.white};\n    &:hover,\n    &:focus {\n      background-color: black;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const MovieItem = styled.li`\n  padding: ${theme.sizing(1)} 0;\n  padding-left: ${theme.sizing(2)};\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    background-color: black;\n    color: white;\n    cursor: pointer;\n  }\n  a {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: ${theme.sizing(12)};\n  height: ${theme.sizing(12)};\n  border: 0;\n  background-image: url('https://cdn3.iconfinder.com/data/icons/feather-5/24/search-1024.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: ${theme.sizing(5)};\n  border: none;\n  outline: none;\n  padding-left: ${theme.sizing(1)};\n  padding-right: ${theme.sizing(1)};\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { findMovieByName } from 'constants/api';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieList, MovieItem } from '../Home/Home.styled';\nimport { SearchInput, SearchBtn, SearchForm } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(() => searchParams.get('query') ?? '');\n  const queryRef = useRef(query);\n  const [inpuValue, setInpuValue] = useState(queryRef.current ?? '');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const nextParams = query !== '' ? { query } : {};\n        setSearchParams(nextParams);\n        const response = await findMovieByName(query);\n        const {\n          data: { results },\n        } = response;\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [query, setSearchParams]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      name: { value },\n    } = e.currentTarget;\n    setQuery(value);\n    queryRef.current = value;\n\n    // e.target.reset();\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchInput\n          name=\"name\"\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={e => setInpuValue(e.target.value)}\n          value={inpuValue}\n        />\n        <SearchBtn type=\"submit\"></SearchBtn>\n      </SearchForm>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ title, id }, idx) => (\n            <MovieItem key={idx}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","styled","theme","MovieItem","SearchBtn","SearchInput","SearchForm","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","get","query","setQuery","queryRef","useRef","current","inpuValue","setInpuValue","useEffect","findMovieByName","response","results","data","console","log","fetchData","onSubmit","e","preventDefault","value","currentTarget","name","type","autoComplete","onChange","target","length","map","idx","title","id","to","state","from"],"sourceRoot":""}