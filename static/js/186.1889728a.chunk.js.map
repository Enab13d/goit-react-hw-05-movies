{"version":3,"file":"static/js/186.1889728a.chunk.js","mappings":"yOAkCA,UA9BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE+BC,EAAAA,EAAAA,IAAgBH,GAF/C,OAEcI,EAFd,OAGwBC,EAAcD,EAAtBE,KAAQD,QAClBN,EAAWM,GAJjB,gDAMIE,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACT,KAGF,wBACGF,EAAQY,QACP,OAAIZ,GAASa,SAAQ,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACnB,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADU,KAMrB,uBAAG,+CAGV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { getMovieReviews } from 'constants/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n        try {\n            const response = await getMovieReviews(movieId);\n            const { data: { results } } = response;\n          setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length ?\n        [...reviews].flatMap(({ author, content, id }) => (\n          <li key={id}>\n            <h4>{author}</h4>\n            <p>{content}</p>\n          </li>\n        )) :\n        <p>We don't have any reviews for this movie.</p>}\n    </ul>\n  );\n};\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","response","results","data","console","log","fetchData","length","flatMap","author","content","id"],"sourceRoot":""}