{"version":3,"file":"static/js/170.53efbd73.chunk.js","mappings":"yRAGaA,EAAWC,EAAAA,EAAAA,GAAH,0HACjBC,EAAAA,GAAAA,GAAAA,GAIOA,EAAAA,GAAAA,OAAa,IAGXC,EAAcF,EAAAA,EAAAA,IAAH,wWASXG,EAAQH,EAAAA,EAAAA,IAAH,2EAGdC,EAAAA,GAAAA,GAAAA,IAISG,EAAYJ,EAAAA,EAAAA,GAAH,0NAIAC,EAAAA,GAAAA,OAAAA,MAKlBA,EAAAA,GAAAA,GAAAA,G,4LC/BSI,EAAmBL,EAAAA,EAAAA,IAAH,+EACzBC,EAAAA,GAAAA,GAAAA,GAEcA,EAAAA,GAAAA,OAAa,IAGlBK,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,oRAOVC,EAAAA,GAAAA,OAAa,GAEJA,EAAAA,GAAAA,OAAAA,YACXA,EAAAA,GAAAA,OAAAA,MAGaA,EAAAA,GAAAA,OAAAA,OAGXO,EAAiBR,EAAAA,EAAAA,GAAH,yDAEbC,EAAAA,GAAAA,OAAa,IAEdQ,GAAYT,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,sVAGHC,EAAAA,GAAAA,OAAa,GAMnBA,EAAAA,GAAAA,OAAa,GAEJA,EAAAA,GAAAA,OAAAA,YACXA,EAAAA,GAAAA,OAAAA,MAGaA,EAAAA,GAAAA,OAAAA,O,uCCiBxB,EAvDqB,WAAO,IAAD,IACvB,GAAwBS,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACKC,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,GAAWC,EAAAA,EAAAA,MAEXC,GAAkBC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,aAAC,EAAgBC,MAkB/C,OAhBEC,EAAAA,EAAAA,YAAU,WAAM,wCACf,0HAE0BC,EAAAA,EAAAA,IAAcT,GAFxC,OAESU,EAFT,SAGkEA,EAASC,KAAhEC,EAHX,EAGWA,YAAaC,EAHxB,EAGwBA,MAAOC,EAH/B,EAG+BA,aAAcC,EAH7C,EAG6CA,SAAUC,EAHvD,EAGuDA,OACpDjB,EAAQ,CAACa,YAAAA,EAAaC,MAAAA,EAAOC,aAAAA,EAAcC,SAAAA,EAAUC,OAAAA,IAJxD,gDAMGC,QAAQC,IAAR,MANH,0DADe,uBAAC,WAAD,wBAUdC,EAED,GAAE,CAACnB,KAMJ,iCACE,UAACJ,EAAD,CAAWwB,GAAE,UAAEhB,EAAgBiB,eAAlB,QAA6B,UAA1C,UAAqD,WAAO,SAAC,MAAD,QAC5D,UAAC7B,EAAD,WACKM,EAAKc,aAAc,gBAAKU,IAAG,6DAAwDxB,EAAKc,aAAeW,IAAMzB,EAAKe,MAAQW,MAAM,SAAW,SAAC,KAAD,KAC9I,4BACA,wBAAM1B,EAAKe,SACb,6CAAmBY,KAAKC,MAAwB,GAAlB5B,EAAKgB,cAAnC,QACA,wBAAI,cACJ,uBAAIhB,EAAKiB,YACT,wBAAI,YACF,wBACGjB,EAAKkB,QAAUlB,EAAKkB,OAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAmB,wBAAcA,GAALD,EAA5B,aAItC,4BACI,wBAAI,qBACJ,UAACjC,EAAD,YACE,yBAAI,SAACF,EAAD,CAAY2B,GAAG,OAAf,SAAsB,YAC1B,yBAAI,SAAC3B,EAAD,CAAY2B,GAAG,UAAf,SAAyB,kBAE/B,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACD,SAAC,KAAD,WAMN,C","sources":["components/Cast/Cast.styled.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from 'constants';\n\nexport const CastList = styled.ul`\n  ${theme.mq[0]} {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: center;\n    gap: ${theme.sizing(2)};\n  }\n`;\nexport const Placeholder = styled.div`\n  background-image: url(https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg);\n  width: 100%;\n  height: 100%;\n  background-color: black;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n`;\nexport const Thumb = styled.div`\n  width: 100%;\n\n  ${theme.mq[0]} {\n    height: 270px;\n  }\n`;\nexport const ActorCard = styled.li`\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: ${theme.colors.white};\n  img {\n    width: 100%;\n  }\n\n  ${theme.mq[0]} {\n    width: 180px;\n    img {\n      max-width: 100%;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { theme } from \"constants\";\nimport { Link } from \"react-router-dom\";\n\n\nexport const MovieCardWrapper = styled.div`\n  ${theme.mq[0]} {\n    display: flex;\n    column-gap: ${theme.sizing(4)};\n  }\n`\nexport const ButtonLink = styled(Link)`\n  display: block;\n  width: 100px;\n  height: 30px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  padding: ${theme.sizing(2)};\n  text-align: center;\n  background-color: ${theme.colors.movieCardBg};\n  color: ${theme.colors.white};\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.black};\n  }\n`\nexport const BtnLinkWrapper = styled.ul`\ndisplay: flex;\ncolumn-gap: ${theme.sizing(2)};\n`\nexport const GoBackBtn = styled(Link)`\n  display: inline-flex;\n  justify-content: space-between;\n  margin-bottom: ${theme.sizing(3)};\n  width: 100px;\n  height: 30px;\n  border-radius: 8px;\n  border: none;\n  font-weight: 600;\n  padding: ${theme.sizing(2)};\n  text-align: center;\n  background-color: ${theme.colors.movieCardBg};\n  color: ${theme.colors.white};\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.black};\n  }\n\n`","import { findMovieById } from \"constants/api\";\nimport { useState, useEffect, useRef, Suspense } from \"react\"\nimport { Outlet, useLocation, useParams } from \"react-router-dom\"\nimport { MovieCardWrapper, ButtonLink, BtnLinkWrapper, GoBackBtn } from \"../MovieDetails/MovieDetails.styled\";\nimport { Loader } from 'components/Loader/Loader';\nimport { Placeholder } from \"components/Cast/Cast.styled\";\nimport { BsArrowReturnLeft } from \"react-icons/bs\";\n\nconst MovieDetails = () => {\n    const [info, setInfo] = useState({});\n  const {movieId} = useParams();\n  const location = useLocation();\n\n  const backLocationRef = useRef(location.state?.from);\n  \n    useEffect(() => {\n     async function fetchData() {\n      try {\n        const response = await findMovieById(movieId);\n        const { poster_path, title, vote_average, overview, genres } = response.data;\n        setInfo({poster_path, title, vote_average, overview, genres } );\n      } catch (error) {\n        console.log(error);\n      }\n    }\n      fetchData();\n\n    }, [movieId])\n\n\n\n  return (\n    \n    <>\n      <GoBackBtn to={backLocationRef.current ?? '/movies'}>Go back<BsArrowReturnLeft/></GoBackBtn>\n      <MovieCardWrapper>\n          {info.poster_path ? <img src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${info.poster_path}`} alt={ info.title } width='360' /> : <Placeholder/>}\n        <div>\n        <h1>{ info.title}</h1>\n      <p>{`User score: ${Math.round(info.vote_average*10)}%`}</p>\n      <h2>Overview</h2>\n      <p>{info.overview}</p>\n      <h3>Genres</h3>\n        <ul>\n          {info.genres && info.genres.map(({ id, name }) => (<li key={id}>{name}</li>))}\n      </ul>\n        </div>\n    </MovieCardWrapper>\n    <div>\n        <h4>Additional info</h4>\n        <BtnLinkWrapper>\n          <li><ButtonLink to='cast'>Cast</ButtonLink></li>\n          <li><ButtonLink to='reviews'>Reviews</ButtonLink></li>\n        </BtnLinkWrapper>\n        <Suspense fallback={<Loader/>}>\n       <Outlet/>\n        </Suspense>\n      </div>\n      </>\n    )\n\n}\n\nexport default MovieDetails;"],"names":["CastList","styled","theme","Placeholder","Thumb","ActorCard","MovieCardWrapper","ButtonLink","Link","BtnLinkWrapper","GoBackBtn","useState","info","setInfo","movieId","useParams","location","useLocation","backLocationRef","useRef","state","from","useEffect","findMovieById","response","data","poster_path","title","vote_average","overview","genres","console","log","fetchData","to","current","src","alt","width","Math","round","map","id","name","Suspense","fallback","Loader"],"sourceRoot":""}