{"version":3,"file":"static/js/736.7ebd732b.chunk.js","mappings":"kSAGaA,EAAWC,EAAAA,EAAAA,GAAH,mIACjBC,EAAAA,GAAAA,GAAAA,GAIcA,EAAAA,GAAAA,OAAa,IAIlBC,EAAcF,EAAAA,EAAAA,IAAH,kXASXG,EAAQH,EAAAA,EAAAA,IAAH,oEAKLI,EAAYJ,EAAAA,EAAAA,GAAH,iD,SCWtB,EAhCa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE2BC,EAAAA,EAAAA,IAAgBH,GAF3C,OAEUI,EAFV,OAIcC,EACND,EADFE,KAAQD,KAEVN,EAAUM,GANd,gDAQIE,QAAQC,IAAR,MARJ,0DADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAACT,KAGF,SAACT,EAAD,UACGO,GACCA,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,GAA3C,OACT,UAAClB,EAAD,WAAqBiB,GAAe,gBAAKE,IAAG,6DAAwDF,GAAgBG,IAAKJ,EAAeK,MAAM,SAAU,SAACtB,EAAD,WAAO,SAACD,EAAD,OACzJ,uBAAIkB,KACJ,uBAAID,MAFMG,EADP,KAQlB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { theme } from \"constants\";\n\nexport const CastList = styled.ul`\n  ${theme.mq[0]} {\n    display: flex;\n    flex-wrap: wrap;\n    align-content: center;\n    column-gap: ${theme.sizing(2)};\n  }\n\n`\nexport const Placeholder = styled.div`\nbackground-image: url(https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-4-user-grey-d8fe957375e70239d6abdd549fd7568c89281b2179b5f4470e2e12895792dfa5.svg);\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: center;\n`\nexport const Thumb = styled.div`\n      width: 100%;\n      height: 270px;\n\n`\nexport const ActorCard = styled.li`\n      width: 180px;\n\n\n`\n","import { getMovieCredits } from 'constants/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { CastList, Placeholder, Thumb, ActorCard } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await getMovieCredits(movieId);\n        const {\n          data: { cast },\n        } = response;\n        setActors(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {actors &&\n        actors.map(({ character, original_name, profile_path, id }) => (\n          <ActorCard key={id}>{profile_path ? <img src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${profile_path}`} alt={original_name} width='180'/> : <Thumb><Placeholder/></Thumb>}\n                <p>{original_name}</p>\n                <p>{character}</p>\n          </ActorCard>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","theme","Placeholder","Thumb","ActorCard","useState","actors","setActors","movieId","useParams","useEffect","getMovieCredits","response","cast","data","console","log","fetchData","map","character","original_name","profile_path","id","src","alt","width"],"sourceRoot":""}